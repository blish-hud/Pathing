//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BhModule.Community.Pathing {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BhModule.Community.Pathing.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pathing.
        /// </summary>
        internal static string General_UiName {
            get {
                return ResourceManager.GetString("General_UiName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Categories hidden because they are for markers on a different map.
        ///
        ///Click to view them or you can disable this filter by toggling:
        ///Pathing Module Settings &gt; Marker Options &gt; {0}..
        /// </summary>
        internal static string Info_HiddenCategories {
            get {
                return ResourceManager.GetString("Info_HiddenCategories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Categories.
        /// </summary>
        internal static string Repo_Categories {
            get {
                return ResourceManager.GetString("Repo_Categories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download.
        /// </summary>
        internal static string Repo_Download {
            get {
                return ResourceManager.GetString("Repo_Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Info.
        /// </summary>
        internal static string Repo_Info {
            get {
                return ResourceManager.GetString("Repo_Info", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Above/Below Indicators.
        /// </summary>
        internal static string Setting_MapShowAboveBelowIndicators {
            get {
                return ResourceManager.GetString("Setting_MapShowAboveBelowIndicators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Markers on the Minimap.
        /// </summary>
        internal static string Setting_MapShowMarkersOnCompass {
            get {
                return ResourceManager.GetString("Setting_MapShowMarkersOnCompass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Markers on Fullscreen Map.
        /// </summary>
        internal static string Setting_MapShowMarkersOnFullscreen {
            get {
                return ResourceManager.GetString("Setting_MapShowMarkersOnFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Trails on the Minimap.
        /// </summary>
        internal static string Setting_MapShowTrailsOnCompass {
            get {
                return ResourceManager.GetString("Setting_MapShowTrailsOnCompass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Trails on Fullscreen Map.
        /// </summary>
        internal static string Setting_MapShowTrailsOnFullscreen {
            get {
                return ResourceManager.GetString("Setting_MapShowTrailsOnFullscreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Markers to Animate.
        /// </summary>
        internal static string Setting_PackAllowMarkersToAnimate {
            get {
                return ResourceManager.GetString("Setting_PackAllowMarkersToAnimate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Markers to Automatically Hide.
        /// </summary>
        internal static string Setting_PackAllowMarkersToAutomaticallyHide {
            get {
                return ResourceManager.GetString("Setting_PackAllowMarkersToAutomaticallyHide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fade Markers Between Character and Camera.
        /// </summary>
        internal static string Setting_PackFadeMarkersBetweenCharacterAndCamera {
            get {
                return ResourceManager.GetString("Setting_PackFadeMarkersBetweenCharacterAndCamera", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fade Markers and Trails While in Combat.
        /// </summary>
        internal static string Setting_PackFadePathablesDuringCombat {
            get {
                return ResourceManager.GetString("Setting_PackFadePathablesDuringCombat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fade Trails Around Character.
        /// </summary>
        internal static string Setting_PackFadeTrailsAroundCharacter {
            get {
                return ResourceManager.GetString("Setting_PackFadeTrailsAroundCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allow Markers to Set Clipboard.
        /// </summary>
        internal static string Setting_PackMarkerConsentToClipboard {
            get {
                return ResourceManager.GetString("Setting_PackMarkerConsentToClipboard", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some markers support copying text to your clipboard (such as waypoints or build templates).
        ///
        ///Always (Default) - Markers can always update your clipboard.  This can occur on interact ({0}) or automatically when you walk in range of the marker.
        ///
        ///Only When Interacted With - Markers can update your clipboard ONLY when interacted ({0}) with directly.  Markers configured as automatic will require interaction.
        ///
        ///Never - Markers can never update your clipboard..
        /// </summary>
        internal static string Setting_PackMarkerConsentToClipboardDescription {
            get {
                return ResourceManager.GetString("Setting_PackMarkerConsentToClipboardDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Opacity Override.
        /// </summary>
        internal static string Setting_PackMaxOpacityOverride {
            get {
                return ResourceManager.GetString("Setting_PackMaxOpacityOverride", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max Trail Animation Speed.
        /// </summary>
        internal static string Setting_PackMaxTrailAnimationSpeed {
            get {
                return ResourceManager.GetString("Setting_PackMaxTrailAnimationSpeed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Max View Distance.
        /// </summary>
        internal static string Setting_PackMaxViewDistance {
            get {
                return ResourceManager.GetString("Setting_PackMaxViewDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show Categories From All Maps.
        /// </summary>
        internal static string Setting_PackShowCategoriesFromAllMaps {
            get {
                return ResourceManager.GetString("Setting_PackShowCategoriesFromAllMaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Download Marker Packs.
        /// </summary>
        internal static string Window_DownloadMarkerPacks {
            get {
                return ResourceManager.GetString("Window_DownloadMarkerPacks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Key Bindings.
        /// </summary>
        internal static string Window_KeyBindSettingsTab {
            get {
                return ResourceManager.GetString("Window_KeyBindSettingsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Marker Options.
        /// </summary>
        internal static string Window_MainSettingsTab {
            get {
                return ResourceManager.GetString("Window_MainSettingsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Map Options.
        /// </summary>
        internal static string Window_MapSettingsTab {
            get {
                return ResourceManager.GetString("Window_MapSettingsTab", resourceCulture);
            }
        }
    }
}
